{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,IAAIC,EAAQ,GACRC,EAAO,GACPC,EAAS,GAkCb,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACLN,EACJI,EAAQ,C,SAACN,EAAUS,MAAAR,IAEnBM,EAAO,C,SAACP,EAAUS,MAAAR,MAChBA,MAvCVR,EAAKiB,iBAAiB,SAEtB,SAAqBC,GACM,UAAtBA,EAAMC,OAAOC,OACdjB,EAAQkB,OAAOH,EAAMC,OAAOG,QAEL,SAAtBJ,EAAMC,OAAOC,OACdhB,EAAOiB,OAAOH,EAAMC,OAAOG,QAEJ,WAAtBJ,EAAMC,OAAOC,OACdf,EAASgB,OAAOH,EAAMC,OAAOG,WAIjCtB,EAAKiB,iBAAiB,UAEtB,SAAsBC,GAClBA,EAAMK,iBACNpB,GAASC,EACT,IAAI,IAAIoB,EAAI,EAAGA,GAAKnB,EAAQmB,GAAI,EAC9BlB,EAAckB,EAAGrB,GAASC,GACzBqB,MAAK,EAAClB,SAAEA,EAAUS,MAAAU,MACjBX,YAAW,KAAOY,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBtB,QAAiBmB,SAAgBA,MAEjGI,OAAM,EAACvB,SAAEA,EAAUS,MAAAe,MAClBhB,YAAW,KAAOY,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAoBzB,QAAewB,SAAgBA","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict'\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nlet delay = '';\nlet step = '';\nlet amount = '';\n\n\nform.addEventListener('input', onFormInput);\n\nfunction onFormInput(event) {\n  if(event.target.name === 'delay'){\n    delay = Number(event.target.value);\n  };\n  if(event.target.name === 'step'){\n    step = Number(event.target.value);\n  };\n  if(event.target.name === 'amount'){\n    amount = Number(event.target.value);\n  };\n};\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n    event.preventDefault();\n    delay -= step;\n    for(let i = 1; i <= amount; i +=1){\n      createPromise(i, delay += step)\n      .then(({ position, delay }) => {\n        setTimeout(() => {Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);}, delay)\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);}, delay)\n      });\n    }\n};\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }}, delay)\n  });\n};\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","target","name","Number","value","preventDefault","i","then","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.15e6607e.js.map"}